initialize() {
	if (exists("slimgui")){
		defineConstant("NUM",1);
		defineConstant("SEXRATIO",0.5);
		defineConstant("K", 750);	// carrying capacity
		defineConstant("m",40);
		defineConstant("NTICKS",20000);
	}

	initializeSLiMModelType("nonWF");

	
	initializeSLiMOptions(nucleotideBased=T);	
	initializeSex();
	defineConstant("LENGTH",1e8);

	defineConstant("FOLDER","/mnt/primevo/work/timothe_dandoy/SLiM_Project/tmp/NWF_FemaleChoice/Pi_WF_NWFFC/");

	
	initializeMutationTypeNuc("m1", 0.5, "f", 0.0);
	m1.convertToSubstitution = T;
//	initializeMutationType("m2", 0.5, "f", 0.2);
	initializeGenomicElementType("g1", m1, 1.0,mmJukesCantor(m*1.25e-8 / 3));
//	initializeGenomicElementType("g2", c(m1,m2), c(10.0,1.0));
	
	initializeChromosome(1,LENGTH,type="A",symbol="A");
	initializeAncestralNucleotides(randomNucleotides(LENGTH));
	initializeGenomicElement(g1, 0, LENGTH-1);
	initializeRecombinationRate(m*1e-8);
	
	initializeChromosome(2,LENGTH,type="X",symbol="X");
	initializeAncestralNucleotides(randomNucleotides(LENGTH));
	initializeGenomicElement(g1, 0, LENGTH-1);
	initializeRecombinationRate(m*1e-8);
	
	initializeChromosome(3,LENGTH,type="Y",symbol="Y");
	initializeAncestralNucleotides(randomNucleotides(LENGTH));
	initializeGenomicElement(g1, 0, LENGTH-1);
	initializeRecombinationRate(0);
}

// each individual reproduces itself once
reproduction() {
	for (pop in sim.subpopulations){
		inds = pop.individuals;
		females = inds[inds.sex == "F"];
		males = inds[inds.sex == "M"];
		//each female reproduce with one male, each male can reproduce multiple times
		for (female in females){
			pop.addCrossed(female, sample(males,1),sex=SEXRATIO);
		}
	}
	self.active = 0;
}

1 early() {
	sim.addSubpop("p1",K,SEXRATIO);
}

early() {
	p1.fitnessScaling = K / p1.individualCount;
}

NTICKS late() {
	hapA = sim.subpopulations.haplosomesForChromosomes("A", includeNulls=F);
	hapX = sim.subpopulations.haplosomesForChromosomes("X", includeNulls=F);
   hapY = sim.subpopulations.haplosomesForChromosomes("Y", includeNulls=F);

	PiA  = calcPi(hapA);
	PiX  = calcPi(hapX);
	PiY  = calcPi(hapY);
	
	writeFile(FOLDER+"NWF_FC_SexRatio"+SEXRATIO+","+NUM+".txt", paste(c(PiA,PiX,PiY)));
}
