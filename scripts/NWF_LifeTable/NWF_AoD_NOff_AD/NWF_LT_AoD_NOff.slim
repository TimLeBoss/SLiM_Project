initialize() {
	if (exists("slimgui")){
		defineConstant("SEXRATIO",0.5);
		defineConstant("K", 750);	// carrying capacity
	}
	
	initializeSLiMModelType("nonWF");
	initializeSLiMOptions(keepPedigrees=T);
	initializeSex();
	
	defineConstant("LENGTH",1e8);
	defineConstant("FOLDER","/mnt/primevo/work/timothe_dandoy/SLiM_Project/tmp/NWF_LifeTable/NWF_AoD_NOff_AD/");
	// Life tables provided by Fernando
	defineConstant("L_F", c(0.215909091, 0.092391304, 0.045908184, 0.054393305, 0.037610619, 0.03908046, 0.04784689, 0.037688442, 0.041775457, 0.046321526, 0.034285714, 0.065088757, 0.060126582, 0.087542088, 0.081180812, 0.088353414, 0.083700441, 0.125, 0.093406593, 0.163636364, 0.115942029, 0.147540984, 0.240384615, 0.164556962, 0.333333333, 0.363636364, 0.428571429, 1));
	defineConstant("L_M", c(0.215809285, 0.096, 0.076106195, 0.057471264, 0.042682927, 0.050955414, 0.049217002, 0.058823529, 0.06, 0.02393617, 0.068119891, 0.067251462, 0.112852665, 0.091872792, 0.112840467, 0.140350877, 0.137755102, 0.165680473, 0.219858156, 0.254545455, 0.329268293, 0.345454545, 0.416666667, 0.476190476, 1, 1, 1, 1));
	// Bronikowski et al. 
	defineConstant("fertility_F", c(0.000, 0.000, 0.000, 0.000, 0.005, 0.211, 0.264, 0.272, 0.279, 0.281, 0.269, 0.276, 0.290, 0.291, 0.285, 0.274, 0.263, 0.271, 0.271, 0.236, 0.233, 0.259, 0.047, 0.108, 0.000, 0.000, 0.000, 0.000));
	
}

//each female reproduce with one male, each male can reproduce with multiple females
reproduction(NULL,"F") {
	if (sample(c(T, F), 1, weights = c(fertility_F[individual.age], 1-fertility_F[individual.age]))){
		mate = subpop.sampleIndividuals(1, sex ="M", minAge=5);
		if (size(mate) != 0){
			subpop.addCrossed(individual, mate,sex=SEXRATIO);
			//writeFile("test.txt", paste(c(mate.index)));
		}
	}
}

1 early() {
	sim.addSubpop("p1",K,SEXRATIO);
	p1.individuals.age = rdunif(K,0,27);	
	deleteFile(FOLDER+"Test_ageatdeath_offsprings.txt");
}

early() {
	// Change individual mortality based on sex-dependent life table
	inds = p1.individuals;
	ages = inds.age;
	sexes = inds.sex;
	mortality = ifelse(sexes == "F", L_F[ages], L_M[ages]);
	survival = 1 - mortality;
	inds.fitnessScaling = survival;
	// density-dependence, factoring in individual mortality
	if (mean(survival)!= 0.0){p1.fitnessScaling = K / (p1.individualCount * mean(survival));}	
}

1000: survival() {
	if (!surviving) {
		// log the death
		line = individual.sex+" "+paste(individual.age,individual.reproductiveOutput);
		writeFile(FOLDER+"NWFLT_aod_no.txt",line, append=T);
	}
	return NULL;
}

5000 late() {
	inds = sim.subpopulations.individuals;
	for (ind in inds){
		writeFile(FOLDER+"NWFLT_ad.txt",ind.sex+" "+paste(ind.age), append=T);
	}
	
}

10000 late() {
}
